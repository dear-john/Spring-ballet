//枚举，发现规律
//待我看看有无其他方法

//所有数字最多以4为周期，所以可以进行mod4操作，如果为0则为4，否则就为余数

/*
#include<iostream>
using namespace std;
int main(){
	//
	int t;
	int n;
	int ans;
	cin>>t;
	while(t--){
		cin>>n;
		ans=1;
		int d=n%10;
		int k=n%4;
		if(k==0){
			k=4;
		}
		while(k--){
			ans=ans*d%10;
		}
		cout<<ans<<endl;
	}
	//
	return 0;
}

*/
include<iostream>
using namespace std;
int main(){
	//
	int t;
	int n;
	cin>>t;
	while(t--){
		cin>>n;
		int t=n%10;
		int k;
		switch(t){
			case 0:
				cout<<0<<endl;
				break;
			case 1:
				cout<<1<<endl;
				break;
			case 2:
				k=n%4;
				switch(k){
					case 0:
						cout<<6<<endl;
						break;
					case 1:
						cout<<2<<endl;
						break;	
					case 2:
						cout<<4<<endl;
						break;	
					case 3:
						cout<<8<<endl;
						break;		
				}
				break;
			case 3:
				k=n%4;
				switch(k){
					case 0:
						cout<<1<<endl;
						break;
					case 1:
						cout<<3<<endl;
						break;	
					case 2:
						cout<<9<<endl;
						break;	
					case 3:
						cout<<7<<endl;
						break;		
				}
				break;
			case 4:
				k=n%2;
				switch(k){
					case 0:
						cout<<6<<endl;
						break;
					case 1:
						cout<<4<<endl;
						break;	
				}
				break;
			case 5:
				cout<<5<<endl;
				break;
			case 6:
				cout<<6<<endl;
				break;
			case 7:
				k=n%4;
				switch(k){
					case 0:
						cout<<1<<endl;
						break;
					case 1:
						cout<<7<<endl;
						break;	
					case 2:
						cout<<9<<endl;
						break;	
					case 3:
						cout<<3<<endl;
						break;		
				}
				break;
			case 8:
				k=n%4;
				switch(k){
					case 0:
						cout<<6<<endl;
						break;
					case 1:
						cout<<8<<endl;
						break;	
					case 2:
						cout<<4<<endl;
						break;	
					case 3:
						cout<<2<<endl;
						break;		
				}
				break;
			case 9:
				k=n%2;
				switch(k){
					case 0:
						cout<<1<<endl;
						break;
					case 1:
						cout<<9<<endl;
						break;	
				}
				break;
			default:
				break;
		}
	}
	//
	return 0;
}
